{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\web developer\\\\Theory\\\\React source\\\\react-complete-guide-code-23-nextjs-introduction\\\\react-complete-guide-code-23-nextjs-introduction\\\\code\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = props => {\n  const route = useRouter();\n  const itemId = route.query.meetupId;\n  console.log(itemId); // fetching data using id\n  // ...\n\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    id: props.meetupItem.id,\n    title: props.meetupItem.title,\n    image: props.meetupItem.image,\n    address: props.meetupItem.address,\n    description: props.meetupItem.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://lyvandat:0909927212aA@cluster0.lsg2quf.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\"); // first {}: filter criteria. ex: {title: \"first meet up\"} (tim thang co title la first meet up)\n  // second {}: thuoc tinh lay ra\n\n  const meetupIdList = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    // all needed pages are covered (different url will be 404 - not found)\n    paths: meetupIdList.map(idItem => {\n      return {\n        params: {\n          meetupId: idItem._id.toString()\n        }\n      };\n    }) // paths: [\n    //   {\n    //     params: {\n    //       meetupId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m2\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m3\",\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  // get meetup id.\n  const meetupId = context.params.meetupId;\n  console.log(meetupId); // getting single meetup from mongo db.\n\n  const client = await MongoClient.connect(\"mongodb+srv://lyvandat:0909927212aA@cluster0.lsg2quf.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupItem = meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(meetupItem);\n  return {\n    props: {\n      meetupItem: {\n        id: meetupItem._id.toString(),\n        title: meetupItem.title,\n        address: meetupItem.address,\n        image: meetupItem.image,\n        description: meetupItem.description\n      }\n    },\n    revalidate: 10\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["E:/web developer/Theory/React source/react-complete-guide-code-23-nextjs-introduction/react-complete-guide-code-23-nextjs-introduction/code/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","useRouter","MeetupDetail","MeetupDetails","props","route","itemId","query","meetupId","console","log","meetupItem","id","title","image","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetupIdList","find","_id","toArray","fallback","paths","map","idItem","params","toString","getStaticProps","context","findOne","revalidate"],"mappings":"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","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  const route = useRouter();\r\n  const itemId = route.query.meetupId;\r\n  console.log(itemId);\r\n\r\n  // fetching data using id\r\n  // ...\r\n  return (\r\n    <MeetupDetail\r\n      id={props.meetupItem.id}\r\n      title={props.meetupItem.title}\r\n      image={props.meetupItem.image}\r\n      address={props.meetupItem.address}\r\n      description={props.meetupItem.description}\r\n    ></MeetupDetail>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://lyvandat:0909927212aA@cluster0.lsg2quf.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  // first {}: filter criteria. ex: {title: \"first meet up\"} (tim thang co title la first meet up)\r\n  // second {}: thuoc tinh lay ra\r\n  const meetupIdList = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  return {\r\n    fallback: false, // all needed pages are covered (different url will be 404 - not found)\r\n    paths: meetupIdList.map((idItem) => {\r\n      return {\r\n        params: {\r\n          meetupId: idItem._id.toString(),\r\n        },\r\n      };\r\n    }),\r\n    // paths: [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m1\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m2\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m3\",\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // get meetup id.\r\n  const meetupId = context.params.meetupId;\r\n  console.log(meetupId);\r\n\r\n  // getting single meetup from mongo db.\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://lyvandat:0909927212aA@cluster0.lsg2quf.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetupItem = meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n\r\n  console.log(meetupItem);\r\n  return {\r\n    props: {\r\n      meetupItem: {\r\n        id: meetupItem._id.toString(),\r\n        title: meetupItem.title,\r\n        address: meetupItem.address,\r\n        image: meetupItem.image,\r\n        description: meetupItem.description,\r\n      },\r\n    },\r\n    revalidate: 10,\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}