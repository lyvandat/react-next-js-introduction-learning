{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport React from \"react\";\n\nconst MeetupDetails = props => {\n  const route = useRouter();\n  const itemId = route.query.meetupId;\n  console.log(itemId); // fetching data using id\n  // ...\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: props.meetupItem.title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: props.meetupItem.description\n      })]\n    }), /*#__PURE__*/_jsx(MeetupDetail, {\n      id: props.meetupItem.id,\n      title: props.meetupItem.title,\n      image: props.meetupItem.image,\n      address: props.meetupItem.address,\n      description: props.meetupItem.description\n    })]\n  });\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://lyvandat:0909927212aA@cluster0.lsg2quf.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\"); // first {}: filter criteria. ex: {title: \"first meet up\"} (tim thang co title la first meet up)\n  // second {}: thuoc tinh lay ra\n\n  const meetupIdList = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    // all needed pages are covered (different url will be 404 - not found)\n    paths: meetupIdList.map(idItem => {\n      return {\n        params: {\n          meetupId: idItem._id.toString()\n        }\n      };\n    }) // paths: [\n    //   {\n    //     params: {\n    //       meetupId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m2\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m3\",\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  // get meetup id.\n  const meetupId = context.params.meetupId;\n  console.log(meetupId); // getting single meetup from mongo db.\n\n  const client = await MongoClient.connect(\"mongodb+srv://lyvandat:0909927212aA@cluster0.lsg2quf.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupItem = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupItem: {\n        id: meetupItem._id.toString(),\n        title: meetupItem.title,\n        address: meetupItem.address,\n        image: meetupItem.image,\n        description: meetupItem.description\n      }\n    },\n    revalidate: 1\n  };\n}\nexport default MeetupDetails;","map":null,"metadata":{},"sourceType":"module"}