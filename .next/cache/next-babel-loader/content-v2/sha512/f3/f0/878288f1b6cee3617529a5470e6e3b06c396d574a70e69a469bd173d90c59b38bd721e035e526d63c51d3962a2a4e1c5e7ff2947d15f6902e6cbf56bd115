{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\web developer\\\\Theory\\\\React source\\\\react-complete-guide-code-23-nextjs-introduction\\\\react-complete-guide-code-23-nextjs-introduction\\\\code\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport React from \"react\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  _s();\n\n  var route = useRouter();\n  var itemId = route.query.meetupId;\n  console.log(itemId); // fetching data using id\n  // ...\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupItem.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupItem.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: props.meetupItem.id,\n      title: props.meetupItem.title,\n      image: props.meetupItem.image,\n      address: props.meetupItem.address,\n      description: props.meetupItem.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MeetupDetails, \"JD5qVJBo0MNDbUb5oI+DMKChels=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["E:/web developer/Theory/React source/react-complete-guide-code-23-nextjs-introduction/react-complete-guide-code-23-nextjs-introduction/code/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Head","useRouter","MeetupDetail","React","MeetupDetails","props","route","itemId","query","meetupId","console","log","meetupItem","title","description","id","image","address"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAGA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA;;AAC/B,MAAMC,KAAK,GAAGL,SAAS,EAAvB;AACA,MAAMM,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAH+B,CAK/B;AACA;;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQF,KAAK,CAACO,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAER,KAAK,CAACO,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,YAAD;AACE,MAAA,EAAE,EAAET,KAAK,CAACO,UAAN,CAAiBG,EADvB;AAEE,MAAA,KAAK,EAAEV,KAAK,CAACO,UAAN,CAAiBC,KAF1B;AAGE,MAAA,KAAK,EAAER,KAAK,CAACO,UAAN,CAAiBI,KAH1B;AAIE,MAAA,OAAO,EAAEX,KAAK,CAACO,UAAN,CAAiBK,OAJ5B;AAKE,MAAA,WAAW,EAAEZ,KAAK,CAACO,UAAN,CAAiBE;AALhC;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CAtBD;;GAAMV,a;UACUH,S;;;KADVG,a;;AAiGN,eAAeA,aAAf","sourcesContent":["import Head from \"next/head\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport React from \"react\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  const route = useRouter();\r\n  const itemId = route.query.meetupId;\r\n  console.log(itemId);\r\n\r\n  // fetching data using id\r\n  // ...\r\n  return (\r\n    <React.Fragment>\r\n      <Head>\r\n        <title>{props.meetupItem.title}</title>\r\n        <meta name=\"description\" content={props.meetupItem.description}></meta>\r\n      </Head>\r\n      <MeetupDetail\r\n        id={props.meetupItem.id}\r\n        title={props.meetupItem.title}\r\n        image={props.meetupItem.image}\r\n        address={props.meetupItem.address}\r\n        description={props.meetupItem.description}\r\n      ></MeetupDetail>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://lyvandat:0909927212aA@cluster0.lsg2quf.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  // first {}: filter criteria. ex: {title: \"first meet up\"} (tim thang co title la first meet up)\r\n  // second {}: thuoc tinh lay ra\r\n  const meetupIdList = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  return {\r\n    fallback: false, // all needed pages are covered (different url will be 404 - not found)\r\n    paths: meetupIdList.map((idItem) => {\r\n      return {\r\n        params: {\r\n          meetupId: idItem._id.toString(),\r\n        },\r\n      };\r\n    }),\r\n    // paths: [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m1\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m2\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m3\",\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // get meetup id.\r\n  const meetupId = context.params.meetupId;\r\n  console.log(meetupId);\r\n\r\n  // getting single meetup from mongo db.\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://lyvandat:0909927212aA@cluster0.lsg2quf.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetupItem = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  console.log(meetupItem);\r\n  return {\r\n    props: {\r\n      meetupItem: {\r\n        id: meetupItem._id.toString(),\r\n        title: meetupItem.title,\r\n        address: meetupItem.address,\r\n        image: meetupItem.image,\r\n        description: meetupItem.description,\r\n      },\r\n    },\r\n    revalidate: 1000,\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}